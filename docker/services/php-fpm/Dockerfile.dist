FROM composer:1 AS builder

ENV APP_SECRET ''
ENV APP_ENV prod
ENV APP_DEBUG 0
ENV SENTRY_DSN ''
ENV SENTRY_RELEASE ''
ENV SENTRY_ENVIRONMENT ''
ENV EVE_CLIENT_ID ''
ENV EVE_CLIENT_SECRET ''
ENV EVE_CALLBACK_URL ''
ENV EVE_ESI_URI ''

WORKDIR /srv

COPY ["bin/", "/srv/bin/"]
COPY ["config/", "/srv/config/"]
COPY ["public/", "/srv/public/"]
COPY ["src/", "/srv/src/"]
COPY ["templates/", "/srv/templates/"]
COPY ["composer.json", "composer.lock", "/srv/"]

RUN composer install \
    --no-interaction \
    --no-scripts \
    --no-plugins \
    --no-progress \
    --no-suggest \
    --optimize-autoloader \
    --ignore-platform-reqs \
    --no-dev \
 && bin/console cache:warmup

FROM php:7.3-fpm-alpine

ARG RELEASE
ENV SENTRY_RELEASE ${RELEASE}

RUN apk add --update --no-cache tini \
 && apk add --update --no-cache --virtual .build-deps icu-dev zlib-dev libzip-dev \
 && docker-php-ext-configure zip --with-libzip \
 && docker-php-ext-configure intl \
 && docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) intl pcntl mbstring opcache zip \
 && runDeps="$( \
    scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
    | tr ',' '\n' \
    | sort -u \
    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )" \
 && apk add --virtual .phpext-rundeps $runDeps \
 && apk del .build-deps

COPY --from=builder /srv /srv/

# adjust permissions
RUN find /srv -type d -exec chmod 700 {} \+ \
 && find /srv -type f -exec chmod 400 {} \+ \
 && chown -R www-data:www-data /srv

# clean up some upstream configuration files for php-fpm
RUN rm /usr/local/etc/php-fpm.conf.default \
 && rm /usr/local/etc/php-fpm.d/docker.conf \
 && rm /usr/local/etc/php-fpm.d/www.conf \
 && rm /usr/local/etc/php-fpm.d/www.conf.default \
 && rm /usr/local/etc/php-fpm.d/zz-docker.conf

# add custom php ini files
COPY docker/services/php-fpm/php.ini /usr/local/etc/php/
COPY docker/services/php-fpm/php-cli.ini /usr/local/etc/php/

# add custom php-fpm conf files
COPY docker/services/php-fpm/php-fpm.conf /usr/local/etc/
COPY docker/services/php-fpm/php-fpm-pool.conf /usr/local/etc/php-fpm.d/

# adjust permissions
RUN find /usr/local/etc -type d -exec chmod 755 {} \+ \
 && find /usr/local/etc -type f -exec chmod 644 {} \+

RUN mkfifo -m 666 /tmp/stdout
RUN mkfifo -m 666 /tmp/stderr

EXPOSE 9000/tcp

CMD [ "sh", "-c", "exec 3<>/tmp/stdout; exec 4<>/tmp/stderr; cat <&3 >&1 & cat <&4 >&2 & exec php-fpm 1>/tmp/stdout 2>/tmp/stdout" ]
