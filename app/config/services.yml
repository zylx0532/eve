services:

  # magic

  _defaults:
    public: false
    autowire: false

  _instanceof:
    Symfony\Component\EventDispatcher\EventSubscriberInterface:
      tags: ['kernel.event_subscriber']
    Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface:
      tags: ['kernel.cache_warmer']

  # security

  app.user.provider:
    class: 'App\Security\UserProvider'

  app.security.oauth2_provider:
    class: 'Alcohol\OAuth2\Client\Provider\EveOnline'
    arguments:
    - clientId: '%env(EVE_CLIENT_ID)%'
      clientSecret: '%env(EVE_SECRET_KEY)%'
      redirectUri: '%env(EVE_CALLBACK_URL)%'

  app.security.oauth2_client:
    class: 'App\Security\OAuth2Client'
    arguments: ['@app.security.oauth2_provider']

  app.security.oauth2_guard:
    class: 'App\Security\OAuth2Guard'
    arguments: ['@router', '@app.security.oauth2_client']

  app.security.logout_handler:
    class: 'App\Security\LogoutSuccessHandler'
    arguments: ['@templating']

  App\Security\OAuth2Subscriber: ['@security.token_storage', '@app.security.oauth2_client', '@logger']

  # esi

  app.esi.api_client:
    class: 'App\Esi\ApiClient'
    arguments: ['@httplug.message_factory']

  # cache

  App\Cache\Warmup\Skills: ['@app.esi.api_client', '@httplug.client.async']

  # predis + session

  predis.client:
    class: 'Predis\Client'

  session.handler.predis:
    class: 'App\Session\Storage\Handler\PredisSessionHandler'
    arguments: ['@predis.client']

  # controllers

  app.controller.index:
    class: 'App\Controller\IndexController'
    arguments: ['@templating', '@app.esi.api_client', '@httplug.client']

  app.controller.assets:
    class: 'App\Controller\AssetsController'
    arguments: ['@templating', '@app.esi.api_client', '@httplug.client']

  app.controller.skills.trained:
    class: 'App\Controller\Skills\TrainedController'
    arguments: ['@templating', '@app.esi.api_client', '@httplug.client']

  app.controller.skills.untrained:
    class: 'App\Controller\Skills\UntrainedController'
    arguments: ['@templating', '@app.esi.api_client', '@httplug.client']

  app.controller.skills.queued:
    class: 'App\Controller\Skills\QueuedController'
    arguments: ['@templating', '@app.esi.api_client', '@httplug.client']

  app.controller.security.login:
    class: 'App\Controller\Security\LoginController'
    arguments: ['@templating', '@app.security.oauth2_provider', '%eve_scopes%']

  app.controller.security.check:
    class: 'App\Controller\Security\CheckController'

  app.controller.debug:
    class: 'App\Controller\DebugController'
    arguments: ['@templating', '@security.token_storage', '@app.security.oauth2_provider']
