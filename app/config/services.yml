services:

  # magic

  _defaults:
    public: false
    autowire: false
  _instanceof:
    Symfony\Component\EventDispatcher\EventSubscriberInterface:
      tags: ['kernel.event_subscriber']
    Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface:
      tags: ['kernel.cache_warmer']

  # security

  user.provider:
    class: 'App\Security\UserProvider'
  security.oauth2_provider:
    class: 'Alcohol\OAuth2\Client\Provider\EveOnline'
    arguments:
    - clientId: '%env(EVE_CLIENT_ID)%'
      clientSecret: '%env(EVE_SECRET_KEY)%'
      redirectUri: '%env(EVE_CALLBACK_URL)%'
  security.oauth2_client:
    class: 'App\Security\OAuth2Client'
    arguments: ['@security.oauth2_provider']
  security.oauth2_guard:
    class: 'App\Security\OAuth2Guard'
    arguments: ['@router', '@security.oauth2_client']
  security.logout_handler:
    class: 'App\Security\LogoutSuccessHandler'
    arguments: ['@templating']

  App\Security\OAuth2Subscriber: ['@security.token_storage', '@security.oauth2_client', '@router', '@logger']

  # esi

  esi.client:
    class: 'App\Esi\ApiClient'
    arguments: ['@httplug.message_factory']

  # cache

  App\Cache\Warmup\Skills: ['@esi.client', '@httplug.client.async']

  # predis + session

  predis.client:
    class: 'Predis\Client'
  session.handler.predis:
    class: 'App\Session\Storage\Handler\PredisSessionHandler'
    arguments: ['@predis.client']

  # controllers

  controller.index:
    public: true
    class: 'App\Controller\IndexController'
    arguments: ['@templating', '@esi.client', '@httplug.client']
  controller.assets:
    public: true
    class: 'App\Controller\AssetsController'
    arguments: ['@templating', '@esi.client', '@httplug.client']
  controller.skills.trained:
    public: true
    class: 'App\Controller\Skills\TrainedController'
    arguments: ['@templating', '@esi.client', '@httplug.client']
  controller.skills.untrained:
    public: true
    class: 'App\Controller\Skills\UntrainedController'
    arguments: ['@templating', '@esi.client', '@httplug.client']
  controller.skills.queued:
    public: true
    class: 'App\Controller\Skills\QueuedController'
    arguments: ['@templating', '@esi.client', '@httplug.client']
  controller.security.login:
    public: true
    class: 'App\Controller\Security\LoginController'
    arguments: ['@templating', '@security.oauth2_client', '%eve_scopes%']
  controller.security.check:
    public: true
    class: 'App\Controller\Security\CheckController'
  controller.debug:
    public: true
    class: 'App\Controller\DebugController'
    arguments: ['@templating', '@security.token_storage', '@security.oauth2_provider']
